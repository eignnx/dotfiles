#!/bin/bash

#
# Initialize my custom environment for a new UNIX-like system.
# 
# To use:
# 
#     $ cd ~
#     $ git clone https://github.com/eignnx/dotfiles
#     $ cd dotfiles
#     $ bash INITIALIZE
#

set -e

################################################################################
# Vim
################################################################################

# Create symlink in $HOME to `.vimrc`
ln -s ../dotfiles/.vimrc $HOME/.vimrc


################################################################################
# Rust
################################################################################

echo 'INITIALIZE > Rust'
echo 'INITIALIZE > Rust > `rustup` : installing...'
# Install rustup with `default` profile which `component add`s:
#     - rustc
#     - rust-std
#     - cargo
#     - rust-docs
#     - rustfmt
#     - clippy
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh

echo 'INITIALIZE > Rust > `rls` : installing...'
rustup component add rls # Install the rust language server


################################################################################
# Utils
################################################################################

echo 'INITIALIZE > Utils > `urlencode` : installing...'
cargo install urlencode

echo 'INITIALIZE > Utils > `exa` : installing...'
cargo install exa


################################################################################
# Prolog
################################################################################

echo 'INITIALIZE > Prolog'

echo 'INITIALIZE > Prolog > SWI'
read -p 'Install SWI Prolog? '
if [[ $REPLY ~= 'y|Y|yes|Yes|' ]]; then
    echo 'INITIALIZE > Prolog > SWI : installing...'

    # Add the package repository for `apt`.
    sudo apt-get install software-properties-common
    sudo apt-add-repository ppa:swi-prolog/stable
    sudo apt-get update
    sudo apt-get install swi-prolog
fi

echo 'INITIALIZE > Prolog > Scryer'
read -p 'Install `scryer-prolog`? '
if [[ $REPLY ~= 'y|Y|yes|Yes|' ]]; then
    echo 'INITIALIZE > Prolog > `scryer-prolog` : installing...'
    cargo install scryer-prolog \
        || echo 'INITIALIZE: Problem - Could not install `scryer-prolog`. It happens.'
fi


################################################################################
# Moving Config Files
################################################################################

echo 'INITIALIZE > Symlink Config Files'

# Create symlink in $HOME to `.vimrc`
ln -s ../dotfiles/.bashrc       $HOME/.bashrc
ln -s ../dotfiles/.bash_aliases $HOME/.bash_aliases
ln -s ../dotfiles/.lynxrc       $HOME/.lynxrc


################################################################################
# Setting up Git and `gh`
################################################################################

echo 'INITIALIZE > Git'
echo 'INITIALIZE > Git > install `gh`'

####### TAKEN FROM: https://github.com/cli/cli/blob/trunk/docs/install_linux.md
# Ensure `curl` is installed.
type -p curl >/dev/null || sudo apt install curl -y
# Add the `apt` repository in which `gh` lives.
curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
sudo apt update
# Actually install `gh`.
sudo apt install gh -y
####### END TAKEN FROM: https://github.com/cli/cli/blob/trunk/docs/install_linux.md

echo 'INITIALIZE > Git > Authenticate with `gh`'
gh auth login
echo 'INITIALIZE > Git > Setup Git to work with `gh`'
gh auth setup-git

################################################################################

echo "INITIALIZE: You're all set up!"

